/*
    Company Tags  : Microsoft, Amazon
    Leetcode Link : https://leetcode.com/problems/partition-to-k-equal-sum-subsets/
*/

class Solution {
public:
    bool visited[16];
    bool possiblePartition(int index, vector<int>& nums, int currSum, int targetSum, int k) {
        if(k == 1)
            return true;
        if(currSum == targetSum)
            return possiblePartition(0, nums, 0, targetSum, k-1);
        
        for(int i = index; i<nums.size(); i++) {
            if(!visited[i] && currSum+nums[i] <= targetSum) {
                visited[i] = true;
                if(possiblePartition(i+1, nums, currSum+nums[i], targetSum, k))
                    return true;
                visited[i] = false;
            }
        }
        return false;
    }
    bool canPartitionKSubsets(vector<int>& nums, int k) {
        int sum = 0;
        int n = nums.size();
        for(int i:nums)
            sum += i;
        if(sum%k != 0)
            return false;
        sum = sum/k;
        for(int i = 0; i<16; i++) {
            visited[i] = false;
        }
        return possiblePartition(0, nums, 0, sum, k);
    }
};
