class Solution {
public:
    vector<int> findRightInterval(vector<vector<int>>& intervals) {
        int n = intervals.size();
        if(n == 1)
            return {-1};
        map<int, int> mp;
        for(int i = 0; i<n; i++) {
            mp[intervals[i][0]] = i;
        }
        vector<int> result(n, -1);
        
        for(int i = 0; i<n; i++) {
            int key = intervals[i][1];
            if(mp.rbegin()->first < key)
                result[i] = -1;
            else
                result[i] = (mp.lower_bound(key)->second);
        }
        
        return result;
    }
};
