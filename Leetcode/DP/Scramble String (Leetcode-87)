/*
    Memoized Approach
    This is an accepted solution
    Leetcode Link : https://leetcode.com/problems/scramble-string/
*/
class Solution {
public:
    map<string, bool> mp;
    bool solve(string s1, string s2) {
        if(s1 == s2)
            return true;
        if(s1.length() != s2.length())
            return false;
        
        string key = s1 + "_" + s2;
        if(mp.count(key))
            return mp[key];
        
        int n = s1.length();
        bool flag = false;
        for(int i = 1; i<=n-1; i++) {
            //if swapping is done || if swapping is not done
                
            if((solve(s1.substr(0, i), s2.substr(n-i, i)) && solve(s1.substr(i, n-i), s2.substr(0, n-i)))
                ||
               (solve(s1.substr(0, i), s2.substr(0, i)) && solve(s1.substr(i, n-i), s2.substr(i, n-i)))
                ) {
                    flag = true;
                    break;
                }
        }
        return mp[key] = flag;
    }
    bool isScramble(string s1, string s2) {
        mp.clear();
        return solve(s1, s2);
    }
};
