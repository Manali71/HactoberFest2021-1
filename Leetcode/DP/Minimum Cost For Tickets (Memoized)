/*
    Leetcode Qn Link : https://leetcode.com/problems/minimum-cost-for-tickets/
*/
int t[366];
class Solution {
public:
    int minCost(vector<int>& days, vector<int>& costs, int idx) {
        if(idx >= days.size())
            return 0;
        
        if(t[idx] != -1)
            return t[idx];
        
        int x = costs[0] + minCost(days, costs, idx+1);
        
        int i = idx;
        for(;i<days.size() && days[i]<days[idx]+7; i++);
        
        int y = costs[1] + minCost(days, costs, i);
        
        int j = idx;
        for(;j < days.size() && days[j] < days[idx]+30; j++);
        
        int z = costs[2] + minCost(days, costs, j);
        
        return t[idx] = min({x, y, z});
    }
    int mincostTickets(vector<int>& days, vector<int>& costs) {
        int cost = 0;
        memset(t, -1, sizeof(t));
        return minCost(days, costs, 0);
    }
};
